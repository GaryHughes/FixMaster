{
	"name": "fixmaster",
	"displayName": "FIX Master",
	"description": "FIX Protocol Formatter and Data Dictionary",
	"icon": "images/fixMaster.png",
	"version": "2.1.0",
	"publisher": "geh-fixmaster",
	"license": "SEE LICENSE IN LICENSE.txt",
	"repository": {
		"type": "git",
		"url": "https://github.com/GaryHughes/FixMaster.git"
	},
	"bugs": {
		"url": "https://github.com/GaryHughes/FixMaster/issues"
	},
	"author": {
		"name": "Gary Hughes"
	},
	"engines": {
		"vscode": "^1.88.0"
	},
	"categories": [
		"Formatters",
		"Other"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./out/extension.js",
	"contributes": {
		"languages": [
			{
			  "id": "FIX",
			  "extensions": [".fix"]
			}
		],
		"grammars": [
			{
			  "language": "FIX",
			  "scopeName": "text.fix",
			  "path": "./syntaxes/fix.grammar.json"
			}
		],
		"configurationDefaults": {
			"editor.tokenColorCustomizations": {
				
				"textMateRules": [
					{ "scope": "fix.message.open", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.message.close", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.field.tag.open", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.field.tag", "settings": { "foreground": "#4daafc" } },
					{ "scope": "fix.field.tag.close", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.field.enumerated.separator", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.field.enumerated.value.name", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.orderbook.open", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.orderbook.close", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.orderbook.side.buy", "settings": { "foreground": "#4daafc" } },
					{ "scope": "fix.orderbook.side.sell", "settings": { "foreground": "#F3D447" } },
					{ "scope": "fix.orderbook.ordstatus.new", "settings": { "foreground": "#99CF8C" } },
					{ "scope": "fix.orderbook.ordstatus.partially-filled", "settings": { "foreground": "#99CF8C" } },
					{ "scope": "fix.orderbook.ordstatus.pending-new", "settings": { "foreground": "#E58C77" } },
					{ "scope": "fix.orderbook.ordstatus.pending-cancel", "settings": { "foreground": "#E58C77" } },
					{ "scope": "fix.orderbook.ordstatus.pending-replace", "settings": { "foreground": "#E58C77" } },
					{ "scope": "fix.orderbook.ordstatus.expired", "settings": { "foreground": "#DA4939" } },
					{ "scope": "fix.orderbook.ordstatus.rejected", "settings": { "foreground": "#DA4939" } },
					{ "scope": "fix.orderbook.ordstatus.stopped", "settings": { "foreground": "#DA4939" } },
					{ "scope": "fix.orderbook.ordstatus.suspended", "settings": { "foreground": "#DA4939" } },
					{ "scope": "fix.orderbook.ordstatus.filled", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.orderbook.ordstatus.done-for-day", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.orderbook.ordstatus.canceled", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.orderbook.ordstatus.replaced", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.orderbook.pending-replace.current.value", "settings": { "foreground": "#E58C77" } },
					{ "scope": "fix.orderbook.pending-replace.new.open", "settings": { "foreground": "#868686" } },
					{ "scope": "fix.orderbook.pending-replace.new.value", "settings": { "foreground": "#99CF8C" } },
					{ "scope": "fix.orderbook.pending-replace.new.close", "settings": { "foreground": "#868686" } }
				]
			}
		},
		"commands": [
			{
				"command": "extension.format-pretty",
				"title": "FIX Master - Pretty Print"
			},
			{
				"command": "extension.format-pretty-with-order-book",
				"title": "FIX Master - Pretty Print with Order Book"
			},
			{
				"command": "extension.format-csv",
				"title": "FIX Master - CSV Format"
			},
			{
				"command": "extension.format-pretty-selection",
				"title": "FIX Master - Pretty Print Selection"
			},
			{
				"command": "extension.format-pretty-selection-with-order-book",
				"title": "FIX Master - Pretty Print Selection with Order Book"
			},
			{
				"command": "extension.format-csv-selection",
				"title": "FIX Master - CSV Format Selection"
			},
			{
				"command": "extension.show-field",
				"title": "FIX Master - Show the definition of a field"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "extension.format-pretty"
				},
				{
					"command": "extension.format-pretty-with-order-book"
				},
				{
					"command": "extension.format-csv"
				},
				{
					"when": "editorHasSelection",
					"command": "extension.format-pretty-selection"
				},
				{
					"when": "editorHasSelection",
					"command": "extension.format-pretty-selection-with-order-book"
				},
				{
					"when": "editorHasSelection",
					"command": "extension.format-csv-selection"
				},
				{
					"command": "extension.show-field"
				}
			],
			"editor/context": [
				{
					"when": "editorHasSelection",
					"command": "extension.format-pretty-selection",
					"group": "1_modification"
				},
				{
					"when": "editorHasSelection",
					"command": "extension.format-pretty-selection-with-order-book",
					"group": "1_modification"
				},
				{
					"when": "editorHasSelection",
					"command": "extension.format-csv-selection",
					"group": "1_modification"
				}
			]
		},
		"configuration": {
			"title": "FIX Master",
			"properties": {
				"fixmaster.orchestraPath": {
					"type": "string",
					"default": null,
					"description": "Path to a directory containing fixtrading.org Orchestrations. FIX Master includes a set of orchestrations that it will use by default."
				},
				"fixmaster.quickFixDataDictionaryPath": {
					"type": "string",
					"default": null,
					"description": "Path to a QuickFix Xml Data Dictionary."
				},
				"fixmaster.nameLookup": {
					"type": "string",
					"default": "Promiscuous",
					"enum": [
						"Strict",
						"Promiscuous"
					],
					"enumDescriptions": [
						"Only use message, field, and enumerated value names from the FIX version matching the BeginString of the message.",
						"Use any available FIX version to find names for messages, fields, and enumerated values."
					],
					"description": "Governs how names are found for messages, fields, and enumerated values."
				},
				"fixmaster.fieldSeparator": {
					"type": "string",
					"maxLength": 1,
					"default": "",
					"description": "The character used to separate fields within a messages. Default is the standard 0x01, some users replace these control characters when logging."
				},
				"fixmaster.prefixPattern": {
					"type": "string",
					"default": "\\d{4}-\\d{2}-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\.\\d+",
					"description": "Match this pattern in the part of each line preceding the FIX message. This will be included when formatting the FIX message. The default pattern matches a timestamp with the format yyyy-MM-dd HH:mm:ss.ffffff"
				},
				"fixmaster.nestedFieldIndent": {
					"type": "number",
					"default": 0,
					"minLength": 0,
					"description": "The number of spaces to indent fields belonging to nested groups"
				},
				"fixmaster.administrativeMessageBehaviour": {
					"type": "string",
					"description": "Control the inclusion and pretty printing of administrative messages",
					"default": "DeleteHeartbeatsAndTestRequests",
					"enum": [
						"IncludeAll",
						"DeleteAll",
						"IgnoreAll",
						"DeleteHeartbeatsAndTestRequests",
						"IgnoreHeartbeatsAndTestRequests"
					],
					"enumDescriptions": [
						"Pretty print all administrative messages",
						"Delete all administrative messages from the output",
						"Leave all administrative messages in the output but do not pretty print",
						"Delete Heartbeats and TestRequests from the output",
						"Leave all Heartbeat and TestRequest messages in the output but do not pretty print"
					]
				},
				"fixmaster.orderBookFields": {
					"type": "string",
					"default": "SenderCompID,TargetCompID,ClOrdID,OrigClOrdID,Side,Symbol,OrdType,OrderQty,Price,CumQty,AvgPx,OrdStatus",
					"description": "A comma separated list of fields to display in the order book when pretty printing. These can be field names or tag numbers."
				},
				"fixmaster.hoversEnabled": {
					"type": "boolean",
					"default": true,
					"description": "Controls whether or not to pretty print any message on the line under the cursor in a toolip"
				},
				"fixmaster.editorReuse": {
					"type": "string",
					"description": "Controls the behaviour when pretty printed output is generated",
					"default": "New",
					"enum": [
						"New",
						"Append",
						"Replace"	
					],
					"enumDescriptions": [
						"Copy the pretty printed output to a new file",
						"Append the pretty printed output to the existing FIX file if there is one",
						"Replace the content of any existing FIX file with the pretty printed output"
					]
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile",
		"test": "node ./out/test/runTest.js",
		"lint": "eslint -c .eslintrc.js --ext .ts ./"
	},
	"devDependencies": {
		"@types/mocha": "^10.0.1",
		"@types/node": "^20.12.7",
		"@types/vscode": "^1.88.0",
		"@vscode/test-electron": "^2.3.4",
		"eslint": "^9.1.0",
		"glob": "^10.3.3",
		"mocha": "^10.2.0",
		"ts-loader": "^9.4.4",
		"typescript": "^5.1.6",
		"webpack": "^5.94.0",
		"webpack-cli": "^5.1.4"
	},
	"dependencies": {
		"@types/base-64": "^1.0.2",
		"@types/clone": "^2.1.4",
		"@types/xml2js": "^0.4.5",
		"base-64": "^1.0.0",
		"clone": "^2.1.2",
		"csv-stringify": "^6.4.6",
		"xml2js": "^0.6.2"
	}
}
